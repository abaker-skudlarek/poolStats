{"version":3,"file":"angular-fire-performance.js","sources":["ng:/@angular/fire/performance/performance.ts","ng:/@angular/fire/performance/performance.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, NgZone, ApplicationRef, InjectionToken, Inject, Optional, PLATFORM_ID } from '@angular/core';\nimport { Observable, Subscription, of, empty } from 'rxjs';\nimport { first, tap, map, shareReplay, switchMap } from 'rxjs/operators';\nimport { performance } from 'firebase/app';\nimport { FirebaseApp, ɵPromiseProxy, ɵlazySDKProxy } from '@angular/fire';\nimport { isPlatformBrowser } from '@angular/common';\n\n// SEMVER @ v6, drop and move core ng metrics to a service\nexport const AUTOMATICALLY_TRACE_CORE_NG_METRICS = new InjectionToken<boolean>('angularfire2.performance.auto_trace');\nexport const INSTRUMENTATION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.instrumentationEnabled');\nexport const DATA_COLLECTION_ENABLED = new InjectionToken<boolean>('angularfire2.performance.dataCollectionEnabled');\n\nexport interface AngularFirePerformance extends Omit<ɵPromiseProxy<performance.Performance>, 'trace'> {};\n\nexport type TraceOptions = {\n  metrics?: {[key:string]: number},\n  attributes?: {[key:string]:string},\n  attribute$?: {[key:string]:Observable<string>},\n  incrementMetric$?: {[key:string]: Observable<number|void|null|undefined>},\n  metric$?: {[key:string]: Observable<number>}\n};\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFirePerformance {\n  \n  private readonly performance: Observable<performance.Performance>;\n\n  constructor(\n    app: FirebaseApp,\n    @Optional() @Inject(AUTOMATICALLY_TRACE_CORE_NG_METRICS) automaticallyTraceCoreNgMetrics:boolean|null,\n    @Optional() @Inject(INSTRUMENTATION_ENABLED) instrumentationEnabled:boolean|null,\n    @Optional() @Inject(DATA_COLLECTION_ENABLED) dataCollectionEnabled:boolean|null,\n    appRef: ApplicationRef,\n    private zone: NgZone,\n    @Inject(PLATFORM_ID) platformId:Object\n  ) {\n\n    this.performance = of(undefined).pipe(\n      switchMap(() => isPlatformBrowser(platformId) ? zone.runOutsideAngular(() => import('firebase/performance')) : empty()),\n      map(() => zone.runOutsideAngular(() => app.performance())),\n      tap(performance => {\n        if (instrumentationEnabled == false) { performance.instrumentationEnabled = false }\n        if (dataCollectionEnabled == false) { performance.dataCollectionEnabled = false }\n      }),\n      shareReplay({ bufferSize: 1, refCount: false }),\n    );\n\n    if (automaticallyTraceCoreNgMetrics != false) {\n\n      // TODO determine more built in metrics\n      // this leaks... move to a service?\n      appRef.isStable.pipe(\n        first(it => it),\n        this.traceUntilComplete('isStable')\n      ).subscribe();\n\n    }\n\n    return ɵlazySDKProxy(this, this.performance, zone);\n\n  }\n\n  private readonly trace$ = (name:string, options?: TraceOptions) =>\n    this.performance.pipe(\n      switchMap(performance =>\n        new Observable<void>(emitter =>\n          this.zone.runOutsideAngular(() => {\n            const trace = performance.trace(name);\n            options && options.metrics && Object.keys(options.metrics).forEach(metric => {\n              trace.putMetric(metric, options!.metrics![metric])\n            });\n            options && options.attributes && Object.keys(options.attributes).forEach(attribute => {\n              trace.putAttribute(attribute, options!.attributes![attribute])\n            });\n            const attributeSubscriptions = options && options.attribute$ ? Object.keys(options.attribute$).map(attribute =>\n              options!.attribute$![attribute].subscribe(next => trace.putAttribute(attribute, next))\n            ) : [];\n            const metricSubscriptions = options && options.metric$ ? Object.keys(options.metric$).map(metric =>\n              options!.metric$![metric].subscribe(next => trace.putMetric(metric, next))\n            ) : [];\n            const incrementOnSubscriptions = options && options.incrementMetric$ ? Object.keys(options.incrementMetric$).map(metric =>\n              options!.incrementMetric$![metric].subscribe(next => trace.incrementMetric(metric, next || undefined))\n            ) : [];\n            emitter.next(trace.start());\n            return { unsubscribe: () => {\n              trace.stop();\n              metricSubscriptions.forEach(m => m.unsubscribe());\n              incrementOnSubscriptions.forEach(m => m.unsubscribe());\n              attributeSubscriptions.forEach(m => m.unsubscribe());\n            }};\n          })\n        )\n      )\n    );\n\n  public readonly traceUntil = <T=any>(name:string, test: (a:T) => boolean, options?: TraceOptions & { orComplete?: boolean }) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        a  => test(a) && traceSubscription.unsubscribe(),\n        () => {},\n        () => options && options.orComplete && traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n  public readonly traceWhile = <T=any>(name:string, test: (a:T) => boolean, options?: TraceOptions & { orComplete?: boolean}) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    let traceSubscription: Subscription|undefined;\n    return source$.pipe(\n      tap(\n        a  => {\n          if (test(a)) {\n            traceSubscription = traceSubscription || this.trace$(name, options).subscribe();\n          } else {\n            traceSubscription && traceSubscription.unsubscribe();\n            traceSubscription = undefined;\n          }\n        },\n        () => {},\n        () => options && options.orComplete && traceSubscription && traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n  public readonly traceUntilComplete = <T=any>(name:string, options?: TraceOptions) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        () => {},\n        () => {},\n        () => traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n  public readonly traceUntilFirst = <T=any>(name:string, options?: TraceOptions) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        () => traceSubscription.unsubscribe(),\n        () => {},\n        () => {}\n      )\n    ).subscribe(subscriber);\n  });\n\n  public readonly trace = <T=any>(name:string, options?: TraceOptions) => (source$: Observable<T>) => new Observable<T>(subscriber => {\n    const traceSubscription = this.trace$(name, options).subscribe();\n    return source$.pipe(\n      tap(\n        () => traceSubscription.unsubscribe(),\n        () => {},\n        () => traceSubscription.unsubscribe()\n      )\n    ).subscribe(subscriber);\n  });\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularFirePerformance } from './performance';\n\n@NgModule({\n  providers: [ AngularFirePerformance ]\n})\nexport class AngularFirePerformanceModule {\n  constructor(_: AngularFirePerformance) {\n    // DI inject AFP here for the automatic data collection\n  } \n}\n"]}